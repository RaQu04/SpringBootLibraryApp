{"ast":null,"code":"import { enviroment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = enviroment.apiBaseUrl;\n  }\n  getBooks() {\n    return this.http.get('\\${this.apiServerUrl}/books/all');\n  }\n  addBook(book) {\n    return this.http.post('${this.apiServerUrl}/book/add', book);\n  }\n  updateBook(book) {\n    return this.http.put('${this.apiServerUrl}/book/update', book);\n  }\n  deleteBook(bookId) {\n    return this.http.delete('${this.apiServerUrl}/book/delete/${bookId}');\n  }\n}\nBookService.ɵfac = function BookService_Factory(t) {\n  return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n};\nBookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookService,\n  factory: BookService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,UAAU,QAAQ,8BAA8B;;;AAMzD,OAAM,MAAOC,WAAW;EAGpBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,iBAAY,GAAUH,UAAU,CAACI,UAAU;EAInD;EAEOC,QAAQ;IACX,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,iCAAiC,CAAC;EACnE;EAEOC,OAAO,CAACC,IAAU;IACrB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAO,+BAA+B,EAAED,IAAI,CAAC;EACtE;EAEOE,UAAU,CAACF,IAAU;IACxB,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAO,kCAAkC,EAAEH,IAAI,CAAC;EACxE;EAEOI,UAAU,CAACC,MAAc;IAC5B,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAO,4CAA4C,CAAC;EAC/E;;AArBSb,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAc,SAAXd,WAAW;EAAAe,YAFR;AAAM","names":["enviroment","BookService","constructor","http","apiBaseUrl","getBooks","get","addBook","book","post","updateBook","put","deleteBook","bookId","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/lukaszrakowiecki/IdeaProjects/library-home/f_library-home/src/app/book.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { HttpClient } from '@angular/common/http';\nimport { Book } from \"./book\";\nimport { enviroment } from \"src/environments/environment\";\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookService{\n    private apiServerUrl:String = enviroment.apiBaseUrl;\n\n    constructor(private http: HttpClient) {\n        \n    }\n\n    public getBooks(): Observable<Book[]>{\n        return this.http.get<Book[]>('\\${this.apiServerUrl}/books/all');\n    }\n\n    public addBook(book: Book): Observable<Book>{\n        return this.http.post<Book>('${this.apiServerUrl}/book/add', book);\n    }\n\n    public updateBook(book: Book): Observable<Book>{\n        return this.http.put<Book>('${this.apiServerUrl}/book/update', book);\n    }\n\n    public deleteBook(bookId: number): Observable<void>{\n        return this.http.delete<void>('${this.apiServerUrl}/book/delete/${bookId}');\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}